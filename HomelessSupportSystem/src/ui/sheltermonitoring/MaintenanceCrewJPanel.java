/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui.sheltermonitoring;

import business.EcoSystem;
import business.useraccount.UserAccount;
import business.workqueue.MaintenanceRequest;
import java.util.ArrayList;
import java.util.Collections;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import ui.uiutils.UiUtils;

/**
 *
 * @author Geetha
 */
public class MaintenanceCrewJPanel extends javax.swing.JPanel {

    private final JPanel container;
    private final UserAccount account;
    private final EcoSystem system;
    private ArrayList<MaintenanceRequest> li;
    
    /**
     * Creates new form MaintenanceCrewJPanel
     */
    public MaintenanceCrewJPanel(JPanel container, UserAccount account, EcoSystem system) {
        initComponents();
        
        this.container = container;
        this.account = account;
        this.system = system;
        populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        titleLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        assignButton = new javax.swing.JButton();
        completeButton = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 204));

        titleLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        titleLabel.setText("Handle Maintenance Requests");

        table.setBackground(new java.awt.Color(255, 255, 204));
        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Sender", "Receiver", "Received On", "Status", "Issue", "Comments"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(table);

        assignButton.setBackground(new java.awt.Color(38, 55, 85));
        assignButton.setForeground(new java.awt.Color(255, 255, 204));
        assignButton.setText("Assign to me");
        assignButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assignButtonActionPerformed(evt);
            }
        });

        completeButton.setBackground(new java.awt.Color(38, 55, 85));
        completeButton.setForeground(new java.awt.Color(255, 255, 204));
        completeButton.setText("Mark Complete");
        completeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                completeButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 780, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(assignButton, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(completeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(titleLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(titleLabel)
                .addGap(19, 19, 19)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(assignButton)
                    .addComponent(completeButton))
                .addContainerGap(252, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void assignButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assignButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow = table.getSelectedRow();
        
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row on the table.");
            return;
        }
        
        MaintenanceRequest req = li.get(selectedRow);
        req.setReceiver(account);
        req.setStatus("ASSIGNED");
        system.getWorkRequestManager().updateWorkRequest(req);
        JOptionPane.showMessageDialog(this, "Maintenance Request assigned.");
        populateTable();
    }//GEN-LAST:event_assignButtonActionPerformed

    private void completeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_completeButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow = table.getSelectedRow();
        
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row on the table.");
            return;
        }
        
        MaintenanceRequest req = li.get(selectedRow);
        if ((req.getReceiver().equals(account) == false) || (req.getStatus().equals("ASSIGNED") == false)) {
            JOptionPane.showMessageDialog(this, "Please assign yourself to the job before marking it as complete.");
            return;
        }
        req.setStatus("COMPLETED");
        system.getWorkRequestManager().updateWorkRequest(req);
        JOptionPane.showMessageDialog(this, "Maintenance Request completed.");
        populateTable();
    }//GEN-LAST:event_completeButtonActionPerformed


    private void populateTable() {
        li = system.getWorkRequestManager(
                ).getUnresolvedMaintenanceRequests();
        
        DefaultTableModel model = (DefaultTableModel) table.getModel();
        model.setRowCount(0);
        for (MaintenanceRequest req: li) {
            Object[] row = new Object[6];
            UserAccount s = req.getSender();
            if (s != null)
                row[0] = s.getIndividual().getName();
            else 
                row[0] = "";
            UserAccount r = req.getReceiver();
            if (r != null)
                row[1] = r.getIndividual().getName();
            else 
                row[1] = "";
            row[2] = req.getRequestDate().toString();
            row[3] = req.getStatus();
            row[4] = req.getIssue();
            row[5] = req.getComments();
            
            model.addRow(row);
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton assignButton;
    private javax.swing.JButton completeButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable table;
    private javax.swing.JLabel titleLabel;
    // End of variables declaration//GEN-END:variables
}
