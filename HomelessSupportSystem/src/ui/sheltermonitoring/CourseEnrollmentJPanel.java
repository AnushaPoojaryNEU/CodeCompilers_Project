/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui.sheltermonitoring;

import business.EcoSystem;
import business.training.Course;
import business.useraccount.UserAccount;
import business.workqueue.EnrollRequest;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import ui.uiutils.UiUtils;

/**
 *
 * @author Geetha
 */
public class CourseEnrollmentJPanel extends javax.swing.JPanel {

    private final EcoSystem system;
    private final UserAccount userAccount;
    private final JPanel container;
    private final List<Course> courses;
    private ArrayList<EnrollRequest> enrollReqs;
    
    /**
     * Creates new form CourseEnrollmentJPanel
     */
    public CourseEnrollmentJPanel(JPanel container, EcoSystem system, UserAccount userAccount) {
        initComponents();
        
        this.container = container;
        this.system = system;
        this.userAccount = userAccount;
        this.courses = system.getTrainingCenterEnterprise(
            ).getCourseDirectory().getAllCourses();
        
        courseCombo.removeAllItems();
        for (Course c: courses) {
            courseCombo.addItem(c.getCourseName());
        }
        populateTable();
    }
    
    private void populateTable() {
        this.enrollReqs = system.getWorkRequestManager(
            ).getEnrollRequestsForUser(userAccount);
        DefaultTableModel model = (DefaultTableModel) table.getModel();
        model.setRowCount(0);
        for (EnrollRequest er: enrollReqs) {
            Course c = er.getCourse();
            Object[] row = new Object[4];
            row[0] = c.getCourseName();
            row[1] = c.getDescription();
            row[2] = er.getStatus();
            row[3] = c.getEnrolledUsers().size();
            model.addRow(row);
        }
    }

    private void clearFields() {
        nameText.setText("");
        descText.setText("");
        prereqText.setText("");
    }

    private void loadCourse(Course course) {
        nameText.setText(course.getCourseName());
        descText.setText(course.getDescription());
        prereqText.setText(course.getPrerequisites());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        courseCombo = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        nameText = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        descText = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        prereqText = new javax.swing.JTextArea();
        enrollButton = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        backButton = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 204));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel1.setText("Currently enrolled courses -");

        jLabel2.setText("Select Course : ");

        courseCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                courseComboActionPerformed(evt);
            }
        });

        jLabel3.setText("Course Name:");

        nameText.setText("Name");

        jLabel4.setText("Description:");

        jLabel5.setText("Prerequisites:");

        descText.setEditable(false);
        descText.setColumns(20);
        descText.setRows(5);
        jScrollPane1.setViewportView(descText);

        prereqText.setEditable(false);
        prereqText.setColumns(20);
        prereqText.setRows(5);
        jScrollPane2.setViewportView(prereqText);

        enrollButton.setBackground(new java.awt.Color(38, 55, 85));
        enrollButton.setForeground(new java.awt.Color(255, 255, 204));
        enrollButton.setText("Submit enrollment request");
        enrollButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enrollButtonActionPerformed(evt);
            }
        });

        table.setAutoCreateRowSorter(true);
        table.setBackground(new java.awt.Color(255, 255, 204));
        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Course Name", "Description", "Enrollment Status", "Enrolled Student Count"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(table);

        jLabel6.setText("Enroll in a new course -");

        backButton.setBackground(new java.awt.Color(38, 55, 85));
        backButton.setForeground(new java.awt.Color(255, 255, 204));
        backButton.setText("Back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(enrollButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel3))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(nameText)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(courseCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 368, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane3)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(backButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(backButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(courseCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(nameText))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(7, 7, 7)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addComponent(enrollButton)
                .addGap(31, 31, 31))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void enrollButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enrollButtonActionPerformed
        int idx = courseCombo.getSelectedIndex();
        
        if (idx < 0) {
            JOptionPane.showMessageDialog(this, "Please select a course to enroll in.");
            return;
        }
        Course course = courses.get(idx);
        
        for (EnrollRequest er: enrollReqs) {
            if (er.getCourse().equals(course)) {
                JOptionPane.showMessageDialog(this, "You have already either enrolled or submitted an enrollment request for this course.");
                return;
            }
        }
        if (system.getTrainingCenterEnterprise(
            ).submitEnrollmentRequest(system, course, userAccount) == false) {
            JOptionPane.showMessageDialog(this, 
                "No program managers available. Please contact the training center admin.");
            return;
        }
        JOptionPane.showMessageDialog(this, "Successfully submitted enrollment request.");
        populateTable();
    }//GEN-LAST:event_enrollButtonActionPerformed

    private void courseComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_courseComboActionPerformed
        int idx = courseCombo.getSelectedIndex();
        
        if (idx < 0) {
            JOptionPane.showMessageDialog(this, "Please select a course.");
            return;
        }
        
        loadCourse(courses.get(idx));
    }//GEN-LAST:event_courseComboActionPerformed

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        UiUtils.previousScreen(container, this);
    }//GEN-LAST:event_backButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backButton;
    private javax.swing.JComboBox<String> courseCombo;
    private javax.swing.JTextArea descText;
    private javax.swing.JButton enrollButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel nameText;
    private javax.swing.JTextArea prereqText;
    private javax.swing.JTable table;
    // End of variables declaration//GEN-END:variables

}
