/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui.doctor;

import business.employee.Employee;
import business.enterprise.Enterprise;
import business.individuals.Individual;
import business.role.Role;
import business.useraccount.UserAccount;
import business.workqueue.WorkRequest;
import java.awt.CardLayout;
import java.awt.Component;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author dwith
 */
public class IndividualReportJPanel extends javax.swing.JPanel {

    /**
     * Creates new form IndividualReportJPanel
     */
    JPanel userProcessContainer;
    UserAccount  userAccount;
    WorkRequest workRequest;
    Enterprise enterprise;
    String list[] = {"Mental Issues", "Physical Issues", "Other Issues"};
    
    
    public IndividualReportJPanel(JPanel userProcessContainer, UserAccount userAccount, WorkRequest workRequest, Enterprise enterprise) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.userAccount = userAccount;
        this.workRequest = workRequest;
        this.enterprise = enterprise;
        conditionJList.setListData(list);
        this.firstNameValue.setText(workRequest.getIndividual().getFirstName());
        this.lastNameValue.setText(workRequest.getIndividual().getLastName());
        populateNurses();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        firstNameValue = new javax.swing.JTextField();
        lastNameValue = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        conditionJList = new javax.swing.JList<>();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        commentsTxt = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        nurseTable = new javax.swing.JTable();
        bckBtn = new javax.swing.JButton();
        assignBtn = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setText("Individual Information");

        jLabel2.setText("First Name :");

        jLabel3.setText("Last Name :");

        lastNameValue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lastNameValueActionPerformed(evt);
            }
        });

        conditionJList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(conditionJList);

        jLabel4.setText("Condition:");

        jLabel5.setText("Comments:");

        jLabel6.setText("Available Nurse :");

        nurseTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Nurse Name"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(nurseTable);

        bckBtn.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        bckBtn.setText("Back");
        bckBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bckBtnActionPerformed(evt);
            }
        });

        assignBtn.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        assignBtn.setText("Assign to nurse");
        assignBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assignBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(304, 304, 304)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(63, 63, 63)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel6))
                                .addGap(68, 68, 68)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(firstNameValue, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(80, 80, 80)
                                        .addComponent(jLabel3)
                                        .addGap(69, 69, 69)
                                        .addComponent(lastNameValue, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(commentsTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(bckBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(assignBtn))
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 437, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(49, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel1)
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(firstNameValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lastNameValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addComponent(jLabel4)))
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(commentsTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(60, 60, 60)
                .addComponent(jLabel6)
                .addGap(28, 28, 28)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bckBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(assignBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void lastNameValueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lastNameValueActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_lastNameValueActionPerformed

    private void assignBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assignBtnActionPerformed
        // TODO add your handling code here:
         int[] iarr = conditionJList.getSelectedIndices();
        List<String> selectedIssues = new ArrayList<>();

        int selectedRow = nurseTable.getSelectedRow();
        if (selectedRow >= 0) {
            if (iarr.length == 0 || commentsTxt.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Please enter all details to prepare report");
            } else {
                for (int i = 0; i < iarr.length; i++) {
                    selectedIssues.add(String.valueOf(conditionJList.getModel().getElementAt(conditionJList.getSelectedIndex())));
                }
                Individual ind = workRequest.getIndividual();

                for (IndividualHistory id : ind.getHistory()) {
                    id.setComments(commentsTxt.getText());
                    id.setCondition(selectedIssues);
                }

                UserAccount nurse = null;
                Employee emp = null;
                Employee e = (Employee) nurseTable.getValueAt(selectedRow, 0);
                Iterator empIterator = enterprise.getEmployeeToUserAcc().entrySet().iterator();

                while (empIterator.hasNext()) {
                    Map.Entry mapElement = (Map.Entry) empIterator.next();
                    Employee e1 = ((Employee) mapElement.getKey());
                    UserAccount ua = ((UserAccount) mapElement.getValue());
                    if (e1.equals(e)) {
                        nurse = ua;
                        emp = e1;
                        break;
                    }
                }
                if (nurse != null) {

                    workRequest.setSender(this.userAccount);
                    workRequest.setStatus("Assigned to Nurse");
                    workRequest.setMessage("");
                    nurse.getWorkQueue().getWorkRequestList().add(workRequest);
                    JOptionPane.showMessageDialog(null, workRequest.getIndividual().getFirstName() + " " + workRequest.getIndividual().getLastName() + " assigned to Nurse " + nurse.getUsername());
                    
                    userProcessContainer.remove(this);
                    Component[] componentArray = userProcessContainer.getComponents();
                    Component component = componentArray[componentArray.length - 1];
                    DoctorWorkAreaJPanel dwjp = (DoctorWorkAreaJPanel) component;
                    dwjp.populateTable();
                    CardLayout layout = (CardLayout) userProcessContainer.getLayout();
                    layout.previous(userProcessContainer);
                }
            }
        } else {
            JOptionPane.showMessageDialog(null, "Please select a nurse to assign");
        }
    }//GEN-LAST:event_assignBtnActionPerformed

    private void bckBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bckBtnActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        DoctorWorkAreaJPanel dwjp = (DoctorWorkAreaJPanel) component;
        dwjp.populateTable();
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_bckBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton assignBtn;
    private javax.swing.JButton bckBtn;
    private javax.swing.JTextField commentsTxt;
    private javax.swing.JList<String> conditionJList;
    private javax.swing.JTextField firstNameValue;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextField lastNameValue;
    private javax.swing.JTable nurseTable;
    // End of variables declaration//GEN-END:variables

    private void populateNurses() {
        DefaultTableModel dtm = (DefaultTableModel) nurseTable.getModel();
        dtm.setRowCount(0);
        Iterator empIterator = enterprise.getEmployeeToUserAcc().entrySet().iterator();
        while (empIterator.hasNext()) {
            Map.Entry mapElement = (Map.Entry) empIterator.next();
            Employee emp = ((Employee) mapElement.getKey());
            UserAccount nurse = ((UserAccount) mapElement.getValue());
            if (nurse.getRoleType().getValue().equals(Role.RoleType.Nurse.getValue())) {
                Object row[] = new Object[1];
                row[0] = emp;
                dtm.addRow(row);
            }
        }

}
}
